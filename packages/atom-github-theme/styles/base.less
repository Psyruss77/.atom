@import "syntax-variables";

atom-text-editor, :host {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        background-color: @syntax-cursor-line-background-color;
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .cursor-line {
    background-color: @syntax-cursor-line-background-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor .search-results .marker .region,
:host .search-results .marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .marker.current-result .region,
:host .search-results .marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.source, .text {
  color: @default-plain-text;
}

.comment {
  color: @default-comments;
  font-style: italic;

  &.documentation {
    color: @default-comments-documentation;
    font-style: normal;

    .punctuation.definition.comment {
      color: @default-comments-documentation !important;
      font-style: normal;
    }
  }
}

.entity {
  &.name {
    color: @default-entities;
  }

//  &.name.type {
//    color: @light-orange;
//    text-decoration: underline;
//  }

//  &.other.inherited-class {
//    color: @green;
//  }
}

.keyword {
  font-weight: bold;

  &.control {
    color: @default-plain-text;

    &.import {
      color: @default-entities;
      font-weight: normal;
    }
  }

  &.operator {
    color: @default-operators;
    font-weight: normal;
  }

//  &.other.special-method {
//    color: @blue;
//  }

//  &.other.unit {
//    color: @orange;
//  }
}

.storage {
  color: @default-plain-text;
  font-weight: bold;

  &.type {
    font-weight: normal;

    &.function, &.class, &.interface {
      color: @default-modifiers;
      font-weight: bold;
    }

    &.primitive {
      color: @default-modifiers;
      font-weight: bold;
    }

    &.annotation {
      color: @default-annotations;
      font-weight: normal;
      font-style: italic;
    }
  }
}

.constant {
  color: @default-entities;

  &.character.entity {
    color: @default-plain-text;
    font-weight: bold;
  }

//  &.character.escape {
//    color: @cyan;
//  }

  &.numeric {
    color: @default-numbers;
  }

  &.language {
    font-weight: bold;
  }

  &.other {
    color: @default-plain-text;
  }

  &.enum {
    color: @default-variables;
  }

//  &.other.color {
//    color: @cyan;
//  }

//  &.other.symbol {
//    color: @green;
//  }
}

.variable {
  color: @default-variables;

  &.language {
    color: @default-punctuations;
    font-weight: bold;
  }

//  &.interpolation {
//    color: darken(@red, 10%);
//  }

//  &.parameter.function {
//    color: @syntax-text-color;
//  }
}

.invalid.illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.string {
  color: @default-strings;

  &.regexp {
    color: @default-operators !important;
    font-weight: bold;

    .punctuation, .keyword, .constant {
      color: @default-operators;
      &.definition {
        &.string {
          color: @default-operators;
        }
      }
    }

    .source.ruby.embedded {
      color: @orange;
    }
  }

  &.other.link {
    color: @red;
  }

  .constant {
    color: @default-strings;
  }
}

.punctuation {
  color: @default-punctuations;

  &.inheritance {
    color: @default-entities;
  }

//  &.definition {
//    &.comment {
//      color: @light-gray;
//    }
//
//    &.string,
//    &.variable,
//    &.parameters,
//    &.array {
//      color: @syntax-text-color;
//    }
//
//    &.heading,
//    &.identity {
//      color: @blue;
//    }
//
//    &.bold {
//      color: @light-orange;
//      font-weight: bold;
//    }
//
//    &.italic {
//      color: @purple;
//      font-style: italic;
//    }
//  }

  &.definition {
    &.comment {
      color: @default-comments;
    }

    &.string {
      color: @default-strings;
    }

    &.variable {
      color: @default-variables;
    }
  }

//  &.section.embedded {
//    color: darken(@red, 10%);
//  }
}

.support {
//  &.class {
//    color: @light-orange;
//  }

//  &.function {
//    color: @cyan;
//
//    &.any-method {
//      color: @blue;
//    }
//  }

  &.class,
  &.namespace,
  &.function {
    color: @default-entities;
  }

  &.function.construct {
    color: @default-modifiers;
    font-weight: bold;
  }

  &.property-name {
    font-weight: bold;
  }
}

.entity {
//  &.name.function {
//    color: @blue;
//  }
//
//  &.name.class, &.name.type.class {
//    color: @light-orange;
//  }
//
//  &.name.section {
//    color: @blue;
//  }
//
//  &.name.tag {
//    color: @red;
//    text-decoration: underline;
//  }
//
//  &.other.attribute-name {
//    color: @orange;
//
//    &.id {
//      color: @blue;
//    }
//  }

  &.name.tag {
    color: @default-variables;
  }

  &.other.attribute-name {
    color: @default-entities;
  }

  &.inherited-class {
    color: @default-entities;
  }
}

.meta {
//  &.class {
//    color: @light-orange;
//  }
//
//  &.link {
//    color: @orange;
//  }
//
//  &.require {
//    color: @blue;
//  }
//
//  &.selector {
//    color: @purple;
//  }
//
//  &.separator {
//    background-color: @gray;
//    color: @syntax-text-color;
//  }

  &.brace,
  &.delimiter {
    color: @default-punctuations;
  }

  &.import {
    .storage.modifier {
      color: @default-variables;
      font-weight: normal;
    }
  }

  &.function-call,
  &.arguments,
  &.other {
    color: @default-entities;
  }

  &.method-call {
    .method {
      color: @default-entities;
    }
  }

  &.tag {
    &.structure,
    &.xml,
    &.block,
    &.inline {
      .punctuation.tag {
        color: @default-variables;
      }
    }
  }

  &.tag.sgml {
    .doctype, .documentroot {
      color: @default-doctype;
      font-style: italic;
      font-weight: normal;
    }
    .punctuation.tag {
      color: @default-doctype;
    }
  }

  &.tag.preprocessor {
    .punctuation.tag, .entity.tag {
      color: @default-meta-tags;
    }
    .entity {
      color: @default-plain-text;
    }
  }

  .punctuation.embedded {
    color: @default-meta-tags !important;
  }
}

.none {
  color: @syntax-text-color;
}

//.markup {
//  &.bold {
//    color: @orange;
//    font-weight: bold;
//  }
//
//  &.changed {
//    color: @purple;
//  }
//
//  &.deleted {
//    color: @red;
//  }
//
//  &.italic {
//    color: @purple;
//    font-style: italic;
//  }
//
//  &.heading .punctuation.definition.heading {
//    color: @blue;
//  }
//
//  &.inserted {
//    color: @green;
//  }
//
//  &.list {
//    color: @red;
//  }
//
//  &.quote {
//    color: @orange;
//  }
//
//  &.raw.inline {
//    color: @green;
//  }
//}

.source.gfm .markup {
  -webkit-font-smoothing: auto;
  &.heading {
    color: @green;
  }
}

atom-text-editor[mini] .scroll-view,
:host([mini]) .scroll-view {
  padding-left: 1px;
}
